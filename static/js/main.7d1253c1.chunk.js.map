{"version":3,"sources":["components/UI/Loader/Loader.js","store/actions/auth.js","store/actions/actions.js","components/BuildControls/BuildControl/BuildControl.js","components/BuildControls/BuildControls.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Modal/Modal.js","containers/burgerBuilder/BurgerBuilder.js","components/Navbar/Navbar.js","containers/notFound/notFound.js","App.js","reportWebVitals.js","store/reducers/burger.js","store/reducers/auth.js","store/reducers/cache.js","index.js"],"names":["Loader","className","authenticate","isSignUp","email","password","dispatch","url","Axios","post","returnSecureToken","then","response","localStorage","setItem","type","AUTHENTICATE","payload","token","data","idToken","userId","localId","console","log","catch","error","ADD_INGREDIENT","REMOVE_INGREDIENT","TOGGLE_INITIAL_BURGER_LOAD","RESET_BURGER","LOGOUT","CACHE_MENU","CACHE_ORDERS","CACHE_INITIAL_BURGER","BuildControl","props","control","label","style","opacity","price","onClick","lessClick","bind","value","disabled","disabledInfo","moreClick","controls","connect","state","purchasable","burger","isPurchasable","totalPrice","auth","isAuthenticated","actionTypes","button","purchaseClick","to","Fragment","toFixed","map","cntrl","i","ingredientsPrice","BurgerIngredient","ingredient","Burger","transformedIngredients","Object","keys","ingredients","ig","Array","_","reduce","accm","next","concat","length","OrderSummary","ing","height","overflowY","orderClick","cancelClick","Modal","children","React","memo","INGREDIENTPRICES","meat","salad","cheese","bacon","BurgerBuilder","isOrderSummary","isLoadingBurger","onOrderClickHandler","history","push","this","initialBurger","setState","get","item","addIngredientHandler","cacheBurger","modal","key","Component","isPurchaseable","authState","didInitialLoad","cache","toggleInitialBurgerLoad","logout","activeClassName","exact","notFound","display","justifyContent","Checkout","lazy","Auth","Orders","Menu","App","isLoading","getItem","autoLogin","autoLoginFail","routes","path","component","render","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","authToken","menu","orders","rootreducer","combineReducers","updatedIngredients","updateIsPurchasable","sum","updateIngredients","clear","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d1253c1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Loader.css\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"section has-text-centered\">\r\n      <div className=\"lds-ripple\">\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import Axios from \"axios\";\r\nimport { AUTHENTICATE } from \"./actions\";\r\n\r\nexport const authenticate = (isSignUp, email, password) => {\r\n  // 1.email , 2. password\r\n  return (dispatch) => {\r\n    // some async thing\r\n    let url;\r\n    if (isSignUp) {\r\n      url =\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDHx6tjGf3HFOpd9qdLJmLKwhReZBVaw30\";\r\n    } else {\r\n      url =\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDHx6tjGf3HFOpd9qdLJmLKwhReZBVaw30\";\r\n    }\r\n    return Axios.post(url, {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    })\r\n      .then((response) => {\r\n        // succeess\r\n        localStorage.setItem(\"email\", email);\r\n        localStorage.setItem(\"password\", password);\r\n        dispatch({\r\n          type: AUTHENTICATE,\r\n          payload: {\r\n            token: response.data.idToken,\r\n            userId: response.data.localId,\r\n          },\r\n        });\r\n        console.log(response);\r\n        return response;\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: AUTHENTICATE,\r\n          payload: {},\r\n        });\r\n        throw error.response;\r\n      });\r\n  };\r\n};\r\n","export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\r\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\r\nexport const AUTHENTICATE = \"AUTHENTICATE\";\r\nexport const TOGGLE_INITIAL_BURGER_LOAD = \"TOGGLE_INITIAL_LOAD\";\r\nexport const RESET_BURGER = \"RESET_BURGER\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const CACHE_MENU = \"CACHE_MENU_DATA\";\r\nexport const CACHE_ORDERS = \"CACHE_ORDERS\";\r\nexport const CACHE_INITIAL_BURGER = \"CACHE_INITIAL_BURGER\";\r\n","import React from \"react\";\r\n\r\nconst BuildControl = (props) => {\r\n  return (\r\n    <div\r\n      className=\"notification\"\r\n      // style={{ boxShadow: \"2px 2px grey\", border: \"1px solid grey\" }}\r\n    >\r\n      <div className=\"level is-mobile\">\r\n        <div className=\"level-item\">\r\n          <p className=\"is-size-4 has-text-weight-semibold\">\r\n            {props.control.label}\r\n            <span style={{ opacity: \"0.7\" }} className=\"is-size-5 ml-3\">\r\n              ( ${props.price} )\r\n            </span>\r\n          </p>\r\n        </div>\r\n        <div className=\"level-item\">\r\n          <div className=\"buttons\">\r\n            <button\r\n              className=\"button is-danger is-light is-outlined\"\r\n              onClick={props.lessClick.bind(this, props.control.value)}\r\n              disabled={props.disabledInfo}\r\n            >\r\n              <span className=\"icon\">\r\n                <i className=\"fas fa-minus\"></i>\r\n              </span>\r\n            </button>\r\n            <button\r\n              className=\"button is-success is-light is-outlined\"\r\n              onClick={props.moreClick.bind(this, props.control.value)}\r\n            >\r\n              <span className=\"icon\">\r\n                <i className=\"fas fa-plus\"></i>\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildControl;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\nimport * as actionTypes from \"../../store/actions/actions\";\r\n\r\nconst controls = [\r\n  { label: \"Meat\", value: \"meat\" },\r\n  { label: \"Cheese\", value: \"cheese\" },\r\n  { label: \"Salad\", value: \"salad\" },\r\n  { label: \"Bacon\", value: \"bacon\" },\r\n];\r\n\r\nconst BuildControls = (props) => {\r\n  let button;\r\n  if (props.auth) {\r\n    button = (\r\n      <button\r\n        disabled={!props.purchasable}\r\n        className=\"button is-large is-success is-fullwidth\"\r\n        onClick={props.purchaseClick}\r\n      >\r\n        <span className=\"icon\">\r\n          <i className=\"fas fa-shipping-fast\"></i>\r\n        </span>\r\n        <span>ORDER NOW</span>\r\n      </button>\r\n    );\r\n  } else {\r\n    button = (\r\n      <Link\r\n        to=\"/user/signup?redirect=checkout\"\r\n        className=\"button is-large is-success is-fullwidth\"\r\n      >\r\n        <span className=\"icon\">\r\n          <i className=\"fas fa-sign-in-alt\"></i>\r\n        </span>\r\n        <span>Sign Up Before Ordering</span>\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"notification has-text-centered is-success is-light\">\r\n        <div className=\"level\">\r\n          <div className=\"level-item\">\r\n            <span className=\"icon is-size-1\">\r\n              <i className=\"fas fa-money-check-alt\"></i>\r\n            </span>\r\n          </div>\r\n          <div className=\"level-item is-size-3\">\r\n            <span className=\"icon is-medium\">\r\n              <i className=\"fas fa-dollar-sign\"></i>\r\n            </span>\r\n            <span className=\"has-text-weight-bold is-size-2\">\r\n              {props.totalPrice.toFixed(2)} /-\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {controls.map((cntrl, i) => {\r\n        return (\r\n          <BuildControl\r\n            price={props.ingredientsPrice[cntrl.value]}\r\n            control={cntrl}\r\n            key={i}\r\n            moreClick={props.moreClick}\r\n            lessClick={props.lessClick}\r\n            disabledInfo={props.disabledInfo[cntrl.value]}\r\n          />\r\n        );\r\n      })}\r\n      {button}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    purchasable: state.burger.isPurchasable,\r\n    totalPrice: state.burger.totalPrice,\r\n    auth: state.auth.isAuthenticated,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    moreClick: (type) => {\r\n      dispatch({\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        payload: { type: type },\r\n      });\r\n    },\r\n    lessClick: (type) => {\r\n      dispatch({\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        payload: { type: type },\r\n      });\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BuildControls);\r\n","import React from \"react\";\r\nimport \"./BurgerIngredient.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BurgerIngredient = (props) => {\r\n  let ingredient = null;\r\n  switch (props.type) {\r\n    case \"bread-bottom\":\r\n      ingredient = <div className=\"BreadBottom\"></div>;\r\n      break;\r\n    case \"bread-top\":\r\n      ingredient = (\r\n        <div className=\"BreadTop\">\r\n          <div className=\"Seeds1\"></div>\r\n          <div className=\"Seeds2\"></div>\r\n        </div>\r\n      );\r\n      break;\r\n    case \"meat\":\r\n      ingredient = <div className=\"Meat\"></div>;\r\n      break;\r\n    case \"cheese\":\r\n      ingredient = <div className=\"Cheese\"></div>;\r\n      break;\r\n    case \"salad\":\r\n      ingredient = <div className=\"Salad\"></div>;\r\n      break;\r\n    case \"bacon\":\r\n      ingredient = <div className=\"Bacon\"></div>;\r\n      break;\r\n    default:\r\n      ingredient = null;\r\n  }\r\n  return ingredient;\r\n};\r\n\r\nBurgerIngredient.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default BurgerIngredient;\r\n","import React from \"react\";\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\r\nimport \"./Burger.css\";\r\nconst Burger = (props) => {\r\n  let transformedIngredients = Object.keys(props.ingredients)\r\n    .map((ig) => {\r\n      return [...Array(props.ingredients[ig])].map((_, i) => {\r\n        return <BurgerIngredient type={ig} key={ig + i} />;\r\n      });\r\n    })\r\n    .reduce((accm, next) => {\r\n      return accm.concat(next);\r\n    });\r\n  if (!transformedIngredients.length) {\r\n    transformedIngredients = (\r\n      <p className=\"title has-text-centered\">Add some ingredients</p>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"Burger\">\r\n      <BurgerIngredient type=\"bread-top\" />\r\n      {transformedIngredients}\r\n      <BurgerIngredient type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Burger;\r\n","import React from \"react\";\r\nimport Burger from \"../Burger\";\r\n\r\nexport default function OrderSummary(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <p className=\"is-size-2 has-text-weight-semibold\">Your Order </p>\r\n      <p className=\"is-size-5\">\r\n        A delicious burger with the following ingredients :\r\n      </p>\r\n      <div className=\"buttons mt-2\">\r\n        {Object.keys(props.ingredients).map((ing, i) => {\r\n          return !!props.ingredients[ing] ? (\r\n            <button\r\n              key={i}\r\n              className=\"button is-rounded is-outlined is-dark is-small\"\r\n            >\r\n              {ing} : {props.ingredients[ing]}\r\n            </button>\r\n          ) : null;\r\n        })}\r\n      </div>\r\n      <div\r\n        className=\"section m-5 p-5 \"\r\n        style={{ height: \"40vh\", overflowY: \"scroll\" }}\r\n      >\r\n        <Burger ingredients={props.ingredients} />\r\n      </div>\r\n\r\n      <p className=\"is-size-4 has-text-success\">\r\n        Total <strong>${props.totalPrice.toFixed(2)} /-</strong>\r\n      </p>\r\n      <br />\r\n      <div className=\"buttons\">\r\n        <button\r\n          onClick={props.orderClick}\r\n          className=\"button  is-medium is-link is-light is-outlined\"\r\n        >\r\n          <span className=\"icon\">\r\n            <i className=\"fas fa-shopping-cart\"></i>\r\n          </span>\r\n          <span>CheckOut</span>\r\n        </button>\r\n        <button\r\n          className=\"button is-medium is-danger is-light is-outlined\"\r\n          onClick={props.cancelClick}\r\n        >\r\n          <span className=\"icon\">\r\n            <i className=\"fas fa-times\"></i>\r\n          </span>\r\n          <span>Cancel</span>\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Modal(props) {\r\n  return (\r\n    <div className=\"modal is-active\">\r\n      <div className=\"modal-background\"></div>\r\n      <div className=\"modal-content animate__animated  animate__jackInTheBox\">\r\n        <div className=\"notification\">{props.children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n// animate__rollOut\r\nexport default React.memo(Modal);\r\n","import React, { Component } from \"react\";\r\nimport BuildControls from \"../../components/BuildControls/BuildControls\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../../store/actions/actions\";\r\nimport Axios from \"axios\";\r\nconst INGREDIENTPRICES = {\r\n  meat: 0.5,\r\n  salad: 0.2,\r\n  cheese: 0.6,\r\n  bacon: 0.4,\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n  state = {\r\n    isOrderSummary: false,\r\n    isLoadingBurger: true,\r\n  };\r\n  componentDidMount() {\r\n    // get the initial burger data from the server and also the recipes but before that just save the ingredients on the server\r\n    if (this.props.initialBurger) {\r\n      this.setState({ isLoadingBurger: false });\r\n    }\r\n    if (!this.props.initialBurger) {\r\n      Axios.get(\"https://recipe-app-ab93d.firebaseio.com/details.json\").then(\r\n        (response) => {\r\n          Object.keys(response.data.ingredients).map((item) => {\r\n            for (let i = 0; i < response.data.ingredients[item]; i++) {\r\n              this.props.addIngredientHandler(item);\r\n            }\r\n          });\r\n          this.props.cacheBurger(response.data.ingredients);\r\n          this.setState({ isLoadingBurger: false });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  onOrderClickHandler = () => {\r\n    this.props.history.push(\"checkout\");\r\n  };\r\n\r\n  render() {\r\n    const disabledInfo = {\r\n      ...this.props.ingredients,\r\n    };\r\n    for (let key in disabledInfo) {\r\n      disabledInfo[key] = this.props.ingredients[key] <= 0;\r\n    }\r\n    let modal;\r\n    if (this.state.isOrderSummary) {\r\n      modal = (\r\n        <Modal>\r\n          <OrderSummary\r\n            totalPrice={this.props.totalPrice}\r\n            ingredients={this.props.ingredients}\r\n            cancelClick={() => {\r\n              this.setState({ isOrderSummary: false });\r\n            }}\r\n            orderClick={this.onOrderClickHandler}\r\n          />\r\n        </Modal>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"columns is-centered section \">\r\n        {modal}\r\n        <div className=\"column is-4\">\r\n          {this.state.isLoadingBurger ? (\r\n            <React.Fragment>\r\n              <Loader />\r\n              <p className=\"is-size-3\">Creating A Delicious Burger For You</p>\r\n            </React.Fragment>\r\n          ) : (\r\n            <Burger ingredients={this.props.ingredients} />\r\n          )}\r\n        </div>\r\n        <div className=\"column is-1\"></div>\r\n        <div className=\"column is-5\">\r\n          <BuildControls\r\n            ingredientsPrice={INGREDIENTPRICES}\r\n            disabledInfo={disabledInfo}\r\n            purchaseClick={() => {\r\n              this.setState({ isOrderSummary: true });\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ingredients: state.burger.ingredients,\r\n    isPurchaseable: state.burger.isPurchasable,\r\n    totalPrice: state.burger.totalPrice,\r\n    authState: state.auth.isAuthenticated,\r\n    didInitialLoad: state.burger.didInitialLoad,\r\n    initialBurger: state.cache.initialBurger,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addIngredientHandler: (type) => {\r\n      dispatch({\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        payload: { type: type },\r\n      });\r\n    },\r\n    toggleInitialBurgerLoad: () => {\r\n      dispatch({ type: actionTypes.TOGGLE_INITIAL_BURGER_LOAD });\r\n    },\r\n    cacheBurger: (burger) => {\r\n      dispatch({\r\n        type: actionTypes.CACHE_INITIAL_BURGER,\r\n        payload: { burger: burger },\r\n      });\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BurgerBuilder);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { LOGOUT } from \"../../store/actions/actions\";\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    <nav className=\"navbar is-light\">\r\n      <div className=\"container\">\r\n        <div className=\"navbar-brand\">\r\n          <Link to=\"/\" className=\"navbar-item is-tab\">\r\n            <span className=\"icon is-large\">\r\n              <i className=\"fas fa-hamburger\"></i>\r\n            </span>\r\n            <span>Burger Builder</span>\r\n          </Link>\r\n        </div>\r\n        <div className=\"navbar-menu\">\r\n          <div className=\"navbar-end\">\r\n            <NavLink\r\n              activeClassName=\"is-active\"\r\n              to=\"/menu\"\r\n              exact\r\n              className=\"navbar-item is-tab\"\r\n            >\r\n              Menu\r\n            </NavLink>\r\n            {props.auth ? (\r\n              <React.Fragment>\r\n                <NavLink\r\n                  activeClassName=\"is-active\"\r\n                  to=\"/orders\"\r\n                  exact\r\n                  className=\"navbar-item is-tab\"\r\n                >\r\n                  Orders\r\n                </NavLink>\r\n\r\n                <Link\r\n                  onClick={props.logout}\r\n                  to=\"/\"\r\n                  className=\"navbar-item is-tab\"\r\n                >\r\n                  Logout\r\n                </Link>\r\n              </React.Fragment>\r\n            ) : (\r\n              <React.Fragment>\r\n                <NavLink\r\n                  className=\"navbar-item is-tab\"\r\n                  activeClassName=\"is-active\"\r\n                  to=\"/user/signin\"\r\n                >\r\n                  Signin\r\n                </NavLink>\r\n                <NavLink\r\n                  className=\"navbar-item is-tab\"\r\n                  activeClassName=\"is-active\"\r\n                  to=\"/user/signup\"\r\n                >\r\n                  SignUp\r\n                </NavLink>\r\n              </React.Fragment>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.auth.isAuthenticated,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logout: () => {\r\n      dispatch({\r\n        type: LOGOUT,\r\n      });\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst notFound = () => {\r\n  return (\r\n    <div className=\"hero is-fullheight is-danger\">\r\n      <div\r\n        className=\"hero-body\"\r\n        style={{ display: \"flex\", justifyContent: \"center\" }}\r\n      >\r\n        <div className=\"has-text-centered\">\r\n          <p className=\"title\">Not Found</p>\r\n          <Link to=\"/\" className=\"button is-light is-large\">\r\n            CLICK HERE TO GO TO THE HOME PAGE\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default notFound;\r\n","import \"./App.css\";\nimport \"../node_modules/bulma/css/bulma.css\";\nimport \"../node_modules/animate.css\";\nimport \"../node_modules/@fortawesome/fontawesome-free/css/all.css\";\nimport React, { Component, lazy, Suspense } from \"react\";\nimport BurgerBuilder from \"./containers/burgerBuilder/BurgerBuilder\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport { Route, Switch } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport { authenticate } from \"./store/actions/auth\";\nimport Loader from \"./components/UI/Loader/Loader\";\nimport { AUTHENTICATE } from \"./store/actions/actions\";\nimport notFound from \"./containers/notFound/notFound\";\n\nconst Checkout = lazy(() => import(\"./containers/Checkout/Checkout\"));\nconst Auth = lazy(() => import(\"./containers/Auth/Auth\"));\nconst Orders = lazy(() => import(\"./containers/Orders/Orders\"));\n// const Menu = lazy(() =>\n//   import(\"./containers/Menu/Menu\")\n//     .then((response) => {\n//       console.log(response);\n//     })\n//     .catch((err) => {\n//       console.log(\"there is a fking error mother fucxker \", err);\n//     })\n// );\nconst Menu = lazy(() => import(\"./containers/Menu/Menu\"));\nclass App extends Component {\n  state = {\n    isLoading: true,\n  };\n  componentDidMount() {\n    const email = localStorage.getItem(\"email\");\n    const password = localStorage.getItem(\"password\");\n    if (email && password) {\n      this.props\n        .autoLogin(email, password)\n        .then(() => {\n          this.setState({\n            isLoading: false,\n          });\n        })\n        .catch(() => {\n          this.setState({ isLoading: false });\n        });\n    } else {\n      this.setState({ isLoading: false });\n      this.props.autoLoginFail();\n    }\n  }\n  render() {\n    let routes = (\n      <Switch>\n        <Route path=\"/\" component={BurgerBuilder} exact />\n        <Route\n          path=\"/menu\"\n          exact\n          render={() => (\n            <Suspense fallback={<Loader />}>\n              <Menu />\n            </Suspense>\n          )}\n        />\n        <Route path=\"/user/:type\" component={Menu} />\n        <Route\n          path=\"/user/:type\"\n          exact\n          render={() => (\n            <Suspense fallback={<Loader />}>\n              <Auth />\n            </Suspense>\n          )}\n        />\n        <Route component={notFound} />\n      </Switch>\n    );\n    if (this.props.authState) {\n      routes = (\n        <Switch>\n          <Route path=\"/\" component={BurgerBuilder} exact />\n          {/* <Route path=\"/menu\" component={Menu} /> */}\n          <Route\n            path=\"/menu\"\n            exact\n            render={() => (\n              <Suspense fallback={<Loader />}>\n                <Menu />\n              </Suspense>\n            )}\n          />\n          <Route\n            path=\"/orders\"\n            render={() => (\n              <Suspense fallback={<Loader />}>\n                <Orders />\n              </Suspense>\n            )}\n            exact\n          />\n          <Route\n            path=\"/checkout\"\n            render={() => (\n              <Suspense fallback={<Loader />}>\n                <Checkout />\n              </Suspense>\n            )}\n            exact\n          />\n          <Route component={notFound} />\n        </Switch>\n      );\n    }\n    return (\n      <React.Fragment>\n        {this.state.isLoading ? (\n          <Loader />\n        ) : (\n          <React.Fragment>\n            <Navbar auth={this.props.isAuthenticated} />\n            {routes}\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authState: state.auth.isAuthenticated,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    autoLogin: (email, password) => {\n      return dispatch(authenticate(false, email, password));\n    },\n    autoLoginFail: () => {\n      //  remove the loading animation if autologin fails ....\n      dispatch({ type: AUTHENTICATE, payload: {} });\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from \"../actions/actions\";\r\n\r\nconst INGREDIENTPRICES = {\r\n  meat: 0.5,\r\n  salad: 0.2,\r\n  cheese: 0.6,\r\n  bacon: 0.4,\r\n};\r\n\r\nconst initialState = {\r\n  ingredients: {\r\n    meat: 0,\r\n    salad: 0,\r\n    cheese: 0,\r\n    bacon: 0,\r\n  },\r\n  totalPrice: 4,\r\n  isPurchasable: false,\r\n  didInitialLoad: false,\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  const updateIsPurchasable = (ingredients) => {\r\n    const sum = Object.keys(ingredients)\r\n      .map((item) => {\r\n        return ingredients[item];\r\n      })\r\n      .reduce((sum, next) => {\r\n        return sum + next;\r\n      }, 0);\r\n    return sum > 0;\r\n  };\r\n  let updatedIngredients;\r\n  switch (type) {\r\n    case actionTypes.ADD_INGREDIENT:\r\n      updatedIngredients = { ...state.ingredients };\r\n      updatedIngredients[payload.type]++;\r\n      return {\r\n        ...state,\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENTPRICES[payload.type],\r\n        isPurchasable: updateIsPurchasable(updatedIngredients),\r\n      };\r\n    case actionTypes.REMOVE_INGREDIENT:\r\n      updatedIngredients = { ...state.ingredients };\r\n      if (updatedIngredients[payload.type] > 0) {\r\n        updatedIngredients[payload.type]--;\r\n        return {\r\n          ...state,\r\n          ingredients: updatedIngredients,\r\n          totalPrice: state.totalPrice - INGREDIENTPRICES[payload.type],\r\n          isPurchasable: updateIsPurchasable(updatedIngredients),\r\n        };\r\n      }\r\n      break;\r\n    case actionTypes.TOGGLE_INITIAL_BURGER_LOAD:\r\n      return {\r\n        ...state,\r\n        didInitialLoad: true,\r\n      };\r\n    case actionTypes.RESET_BURGER:\r\n      let updateIngredients = {};\r\n      Object.keys(state.ingredients).map(\r\n        (item) => (updateIngredients[item] = 0)\r\n      );\r\n      return {\r\n        ...state,\r\n        ingredients: updateIngredients,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// export const store = createStore(\r\n//   reducer,\r\n//   composeEnhancers(applyMiddleware(thunk))\r\n// );\r\n\r\n/**\r\n1. getting the burger data from the server and adding a simp save to server button for practise\r\n - check if there is a premade thing in the server, if there then fetch else reset to zero\r\n\r\n2. also store some premade recipes in the server which the user can select and load\r\n  - check for the premade recipes in the server, if there then load else show in a sexi way and then when you click then reset the scrollin position to zero and load the ingredinets into the burger.\r\n */\r\n","import * as actionTypes from \"../actions/actions\";\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  authToken: \"\",\r\n  userId: \"\",\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.AUTHENTICATE:\r\n      if (payload.token) {\r\n        return {\r\n          ...state,\r\n          isAuthenticated: true,\r\n          authToken: payload.token,\r\n          userId: payload.userId,\r\n        };\r\n      } else {\r\n        // some error occured so just remove the loader\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n    case actionTypes.LOGOUT:\r\n      localStorage.clear();\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        authToken: \"\",\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CACHE,\r\n  CACHE_INITIAL_BURGER,\r\n  CACHE_MENU,\r\n  CACHE_ORDERS,\r\n} from \"../actions/actions\";\r\n\r\nconst initialState = {\r\n  menu: null,\r\n  orders: null,\r\n  initialBurger: null,\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case CACHE_MENU:\r\n      return { ...state, menu: payload.menu };\r\n    case CACHE_ORDERS:\r\n      return {\r\n        ...state,\r\n        orders: payload.orders,\r\n      };\r\n    case CACHE_INITIAL_BURGER: {\r\n      return {\r\n        ...state,\r\n        initialBurger: payload.burger,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n// import reducer, { store } from \"./store/reducers/reducer\";\nimport { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\nimport burgerReducer from \"./store/reducers/burger\";\nimport authReducer from \"./store/reducers/auth\";\nimport cacheReducer from \"./store/reducers/cache\";\nimport thunk from \"redux-thunk\";\nconst rootreducer = combineReducers({\n  burger: burgerReducer,\n  auth: authReducer,\n  cache: cacheReducer,\n});\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootreducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}